name: CI to GitHub Container Registry
on:
  push:
    branches: 
      - main
    tags:
      - "*.*.*"

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest    
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2

      - 
        name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/wordlift/solr-ng
          VERSION=latest
          SOLR_VERSION=latest
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            SOLR_VERSION=$(echo $GITHUB_REF | grep -Eo '([0-9]+\.[0-9]+\.[0-9]+)')
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=solr_version::${SOLR_VERSION}

      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - 
        name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
    
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
            SOLR_VERSION=${{ steps.prep.outputs.solr_version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
    
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
